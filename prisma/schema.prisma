generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlserver"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  Workout       Workout[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Workout {
  id                Int    @id(map: "PK_Workout") @default(autoincrement())
  fkCreatedByUserId String
  title             String @db.VarChar(200)
  excerpt           String @db.VarChar(2000)
  quill_delta_json  String @db.Text
  quill_html        String @db.Text
  quill_plain_text  String @db.Text
  User              User   @relation(fields: [fkCreatedByUserId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_Workout_User")
}
